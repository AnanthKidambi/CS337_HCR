========iter:  0 ============
Device being used: cuda
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
 76%|█████████████████████████████████████████████████████████████████████████████▌                        | 76/100 [00:01<00:00, 47.69it/s]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
========iter:  1 ============

100%|█████████████████████████████████████████████████████████████████████████████████████████████████████| 100/100 [00:02<00:00, 46.27it/s]
cpu cpu
check-input tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64) tensor([], size=(0, 4), dtype=torch.int64) tensor([], size=(0, 3), dtype=torch.int64) tensor([], size=(0, 3), dtype=torch.int64)
check-input2 tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64) tensor([], size=(0, 4), dtype=torch.int64) tensor([], size=(0, 3), dtype=torch.int64) tensor([], size=(0, 3), dtype=torch.int64)
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
Ipython from line 178 of video_style.py
Python 3.9.2 (default, Feb 28 2021, 17:03:44)
Type 'copyright', 'credits' or 'license' for more information
IPython 8.17.2 -- An enhanced Interactive Python. Type '?' for help.
tensor(nan)
tensor(nan)
tensor(nan)
tensor(168.9527)
tensor(168.9527)
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
Cell In[6], line 1
----> 1 torch.isclose(torch.abs(prev_warped_2[~prev_warped_2.isnan()], torch.abs(prev_warped[~prev_warped.isnan()])
      2 )
      3 )
TypeError: abs() takes 1 positional argument but 2 were given
---------------------------------------------------------------------------
RuntimeError                              Traceback (most recent call last)
Cell In[7], line 1
----> 1 torch.isclose(prev_warped[~prev_warped_2.isnan()], prev_warped[~prev_warped.isnan()])
RuntimeError: The size of tensor a (205595) must match the size of tensor b (205604) at non-singleton dimension 0
tensor(28)
tensor(37)
True 0
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 103368.9609375
content_loss = 314089.90625
stt_loss = 0.0
tv_loss= 177.7854461669922
tensor(6.9948, device='cuda:0')
tensor(6.9948, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 103368.953125
content_loss = 314089.59375
stt_loss = 8.737361056887494e-09
tv_loss= 177.7854461669922
tensor(6.9911, device='cuda:0')
tensor(6.9911, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 103412.65625
content_loss = 308342.0625
stt_loss = 0.5520060658454895
tv_loss= 177.79690551757812
tensor(5.7367, device='cuda:0')
tensor(5.7367, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 100368.3125
content_loss = 218559.140625
stt_loss = 652.6350708007812
tv_loss= 180.3456268310547
tensor(3.2594, device='cuda:0')
tensor(3.2594, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 81280.5703125
content_loss = 184628.03125
stt_loss = 1955.4786376953125
tv_loss= 185.7105255126953
tensor(2.8659, device='cuda:0')
tensor(2.8659, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 66044.328125
content_loss = 163126.21875
stt_loss = 4904.02392578125
tv_loss= 196.4427490234375
tensor(2.7668, device='cuda:0')
tensor(2.7668, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 63095.39453125
content_loss = 146933.546875
stt_loss = 6856.5244140625
tv_loss= 201.81068420410156
tensor(2.9692, device='cuda:0')
tensor(2.9692, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 58904.26953125
content_loss = 136683.921875
stt_loss = 7574.8359375
tv_loss= 202.49378967285156
tensor(1.6501, device='cuda:0')
tensor(1.6501, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 54705.80078125
content_loss = 129085.8671875
stt_loss = 8324.7158203125
tv_loss= 202.51004028320312
tensor(2.3508, device='cuda:0')
tensor(2.3508, device='cuda:0')
 30%|██████████████████████████████▉                                                                        | 15/50 [00:00<00:00, 43.56it/s]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 52354.60546875
content_loss = 122773.1796875
stt_loss = 9587.1669921875
tv_loss= 204.0906219482422
tensor(1.5015, device='cuda:0')
tensor(1.5015, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 51228.3828125
content_loss = 116588.6953125
stt_loss = 10655.5322265625
tv_loss= 205.71694946289062
tensor(1.2236, device='cuda:0')
tensor(1.2236, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 50720.0625
content_loss = 111581.4609375
stt_loss = 11268.3857421875
tv_loss= 206.5678253173828
tensor(0.8415, device='cuda:0')
tensor(0.8415, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 49887.94140625
content_loss = 107725.4140625
stt_loss = 11677.05859375
tv_loss= 207.0233154296875
tensor(1.1687, device='cuda:0')
tensor(1.1687, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 49162.3125
content_loss = 104456.1484375
stt_loss = 12130.8427734375
tv_loss= 207.5862579345703
tensor(1.2959, device='cuda:0')
tensor(1.2959, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 48442.13671875
content_loss = 101988.1015625
stt_loss = 12420.2861328125
tv_loss= 207.9434814453125
tensor(1.1942, device='cuda:0')
tensor(1.1942, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 48076.54296875
content_loss = 99381.28125
stt_loss = 12671.736328125
tv_loss= 208.22349548339844
tensor(0.4876, device='cuda:0')
tensor(0.4876, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 47524.1640625
content_loss = 97248.8828125
stt_loss = 12947.1767578125
tv_loss= 208.38072204589844
tensor(0.5574, device='cuda:0')
tensor(0.5574, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 46858.0234375
content_loss = 95381.140625
stt_loss = 13375.2705078125
tv_loss= 208.93516540527344
tensor(1.0807, device='cuda:0')
tensor(1.0807, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 46439.8125
content_loss = 93668.6484375
stt_loss = 13653.564453125
tv_loss= 209.2721710205078
tensor(0.6673, device='cuda:0')
tensor(0.6673, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 46373.2890625
content_loss = 91915.125
stt_loss = 13835.2001953125
tv_loss= 209.50462341308594
tensor(0.8177, device='cuda:0')
tensor(0.8177, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 45850.8671875
content_loss = 90817.984375
stt_loss = 13996.4306640625
tv_loss= 209.70701599121094
tensor(0.8044, device='cuda:0')
tensor(0.8044, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 45544.9765625
content_loss = 89614.8984375
stt_loss = 14193.974609375
tv_loss= 210.10791015625
tensor(0.8029, device='cuda:0')
tensor(0.8029, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 45292.18359375
content_loss = 88517.328125
stt_loss = 14301.79296875
tv_loss= 210.30052185058594
tensor(0.8313, device='cuda:0')
tensor(0.8313, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 45059.7734375
content_loss = 87373.359375
stt_loss = 14467.1904296875
tv_loss= 210.61973571777344
tensor(0.6172, device='cuda:0')
tensor(0.6172, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 44888.80078125
content_loss = 86382.7265625
stt_loss = 14576.7685546875
tv_loss= 210.78335571289062
tensor(0.7092, device='cuda:0')
tensor(0.7092, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 44719.78515625
content_loss = 85385.046875
stt_loss = 14760.1455078125
tv_loss= 211.1061553955078
tensor(0.8687, device='cuda:0')
tensor(0.8687, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 44582.52734375
content_loss = 84469.0390625
stt_loss = 14883.55859375
tv_loss= 211.30422973632812
tensor(0.4780, device='cuda:0')
tensor(0.4780, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 44320.11328125
content_loss = 83673.7578125
stt_loss = 15013.740234375
tv_loss= 211.49754333496094
tensor(0.5839, device='cuda:0')
tensor(0.5839, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 44107.59375
content_loss = 82974.984375
stt_loss = 15142.07421875
tv_loss= 211.7488250732422
tensor(0.8993, device='cuda:0')
tensor(0.8993, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 44070.1953125
content_loss = 82233.09375
stt_loss = 15147.998046875
tv_loss= 211.74072265625
tensor(0.4172, device='cuda:0')
tensor(0.4172, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 43798.2578125
content_loss = 81570.8203125
stt_loss = 15342.150390625
tv_loss= 212.21023559570312
tensor(0.4764, device='cuda:0')
tensor(0.4764, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 43818.8046875
content_loss = 81031.03125
stt_loss = 15215.3759765625
tv_loss= 211.927490234375
tensor(0.5399, device='cuda:0')
tensor(0.5399, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 43324.47265625
content_loss = 80424.6328125
stt_loss = 15727.6689453125
tv_loss= 213.15611267089844
tensor(0.5065, device='cuda:0')
tensor(0.5065, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 43593.890625
content_loss = 79907.125
stt_loss = 15364.5478515625
tv_loss= 212.3227996826172
tensor(0.9465, device='cuda:0')
tensor(0.9465, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 43224.48046875
content_loss = 79392.4609375
stt_loss = 15679.3271484375
tv_loss= 213.06399536132812
tensor(0.7872, device='cuda:0')
tensor(0.7872, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 43286.8046875
content_loss = 78928.5546875
stt_loss = 15574.9423828125
tv_loss= 212.8585968017578
tensor(0.5673, device='cuda:0')
tensor(0.5673, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 43207.82421875
content_loss = 78526.34375
stt_loss = 15596.140625
tv_loss= 212.92686462402344
tensor(0.5279, device='cuda:0')
tensor(0.5279, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 43026.6015625
content_loss = 78203.9921875
stt_loss = 15659.6279296875
tv_loss= 213.2290496826172
tensor(0.8410, device='cuda:0')
tensor(0.8410, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 43010.59765625
content_loss = 77751.7578125
stt_loss = 15669.888671875
tv_loss= 213.27330017089844
tensor(0.4462, device='cuda:0')
tensor(0.4462, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 42795.109375
content_loss = 77346.6484375
stt_loss = 15820.09765625
tv_loss= 213.7659149169922
tensor(0.4265, device='cuda:0')
tensor(0.4265, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 42789.609375
content_loss = 76963.5390625
stt_loss = 15779.38671875
tv_loss= 213.6628875732422
tensor(0.6197, device='cuda:0')
tensor(0.6197, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 42656.7421875
content_loss = 76682.9609375
stt_loss = 15825.25
tv_loss= 213.82676696777344
tensor(0.6160, device='cuda:0')
tensor(0.6160, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 42568.890625
content_loss = 76447.7109375
stt_loss = 15791.9033203125
tv_loss= 213.77737426757812
tensor(0.4006, device='cuda:0')
tensor(0.4006, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 42404.375
content_loss = 76140.328125
stt_loss = 15906.1923828125
tv_loss= 214.1949462890625
tensor(0.4048, device='cuda:0')
tensor(0.4048, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 42392.671875
content_loss = 75819.9609375
stt_loss = 15872.0
tv_loss= 214.1805877685547
tensor(0.3897, device='cuda:0')
tensor(0.3897, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 42254.2109375
content_loss = 75482.671875
stt_loss = 15988.341796875
tv_loss= 214.60000610351562
tensor(0.5565, device='cuda:0')
tensor(0.5565, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 42275.7421875
content_loss = 75212.25
stt_loss = 15902.970703125
tv_loss= 214.47647094726562
tensor(0.4858, device='cuda:0')
tensor(0.4858, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 42132.6015625
content_loss = 74901.046875
stt_loss = 16045.2060546875
tv_loss= 214.9798583984375
tensor(0.3324, device='cuda:0')
tensor(0.3324, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 42071.1875
content_loss = 74733.0546875
stt_loss = 15972.4990234375
tv_loss= 214.90750122070312
tensor(0.4022, device='cuda:0')
tensor(0.4022, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 41876.71875
content_loss = 74517.3671875
stt_loss = 16101.5380859375
tv_loss= 215.39817810058594
tensor(0.3648, device='cuda:0')
tensor(0.3648, device='cuda:0')
========iter:  2 ============

 94%|████████████████████████████████████████████████████████████████████████████████████████████████▊      | 47/50 [00:01<00:00, 37.15it/s]
cpu cpu
check-input tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64) tensor([], size=(0, 4), dtype=torch.int64) tensor([], size=(0, 3), dtype=torch.int64) tensor([], size=(0, 3), dtype=torch.int64)
check-input2 tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64) tensor([], size=(0, 4), dtype=torch.int64) tensor([], size=(0, 3), dtype=torch.int64) tensor([], size=(0, 3), dtype=torch.int64)
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
True 0
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 124693.859375
content_loss = 165982.765625
stt_loss = 0.0
tv_loss= 185.71299743652344
tensor(3.8538, device='cuda:0')
tensor(3.8538, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 124695.140625
content_loss = 165982.53125
stt_loss = 8.825822739311207e-09
tv_loss= 185.7130126953125
tensor(3.8547, device='cuda:0')
tensor(3.8547, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 115475.15625
content_loss = 151304.515625
stt_loss = 23.751567840576172
tv_loss= 186.41592407226562
tensor(3.0907, device='cuda:0')
tensor(3.0907, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 74027.8359375
content_loss = 132584.453125
stt_loss = 1122.4627685546875
tv_loss= 194.0118865966797
tensor(4.8550, device='cuda:0')
tensor(4.8550, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 61863.2109375
content_loss = 118827.2734375
stt_loss = 2702.829345703125
tv_loss= 202.07449340820312
tensor(4.2800, device='cuda:0')
tensor(4.2800, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 57086.96875
content_loss = 111077.0234375
stt_loss = 3307.4443359375
tv_loss= 204.6765594482422
tensor(1.4342, device='cuda:0')
tensor(1.4342, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 53769.8125
content_loss = 105792.5390625
stt_loss = 3637.1357421875
tv_loss= 205.7379913330078
tensor(1.1451, device='cuda:0')
tensor(1.1451, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 51332.98046875
content_loss = 100627.5390625
stt_loss = 4158.3427734375
tv_loss= 207.0465850830078
tensor(1.2418, device='cuda:0')
tensor(1.2418, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 48847.23046875
content_loss = 97494.8125
stt_loss = 4922.7705078125
tv_loss= 208.95108032226562
tensor(1.3793, device='cuda:0')
tensor(1.3793, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 47699.37109375
content_loss = 94421.6640625
stt_loss = 5402.96435546875
tv_loss= 210.0779266357422
tensor(1.3075, device='cuda:0')
tensor(1.3075, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 47266.6015625
content_loss = 91925.515625
stt_loss = 5585.08837890625
tv_loss= 210.2978515625
tensor(0.9690, device='cuda:0')
tensor(0.9690, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 46534.0078125
content_loss = 89758.8359375
stt_loss = 6006.09814453125
tv_loss= 211.1412353515625
tensor(0.8142, device='cuda:0')
tensor(0.8142, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 45902.94140625
content_loss = 87752.203125
stt_loss = 6563.96923828125
tv_loss= 212.4246826171875
tensor(1.2267, device='cuda:0')
tensor(1.2267, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 45254.37109375
content_loss = 86276.3203125
stt_loss = 6879.8173828125
tv_loss= 213.17173767089844
tensor(0.9138, device='cuda:0')
tensor(0.9138, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 44883.6484375
content_loss = 84889.6953125
stt_loss = 7096.49560546875
tv_loss= 213.60159301757812
tensor(0.6844, device='cuda:0')
tensor(0.6844, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 44382.73828125
content_loss = 83689.0078125
stt_loss = 7368.421875
tv_loss= 214.1180877685547
tensor(0.6091, device='cuda:0')
tensor(0.6091, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 43894.58984375
content_loss = 82650.7578125
stt_loss = 7684.0087890625
tv_loss= 214.7480926513672
tensor(0.8512, device='cuda:0')
tensor(0.8512, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 43536.2890625
content_loss = 81682.9140625
stt_loss = 7923.7509765625
tv_loss= 215.23388671875
tensor(0.6715, device='cuda:0')
tensor(0.6715, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 43300.65625
content_loss = 80761.875
stt_loss = 8100.8603515625
tv_loss= 215.53201293945312
tensor(0.4406, device='cuda:0')
tensor(0.4406, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 43000.5
content_loss = 79931.34375
stt_loss = 8324.83984375
tv_loss= 215.8510284423828
tensor(0.7163, device='cuda:0')
tensor(0.7163, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 42758.9375
content_loss = 79230.4765625
stt_loss = 8511.048828125
tv_loss= 216.16616821289062
tensor(0.9092, device='cuda:0')
tensor(0.9092, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 42500.76953125
content_loss = 78608.0546875
stt_loss = 8686.396484375
tv_loss= 216.5157928466797
tensor(0.6080, device='cuda:0')
tensor(0.6080, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 42418.86328125
content_loss = 77888.546875
stt_loss = 8788.2373046875
tv_loss= 216.58872985839844
tensor(0.5630, device='cuda:0')
tensor(0.5630, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 42131.9140625
content_loss = 77394.8203125
stt_loss = 8991.2509765625
tv_loss= 216.95249938964844
tensor(0.8012, device='cuda:0')
tensor(0.8012, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 42071.63671875
content_loss = 76814.5234375
stt_loss = 9075.7763671875
tv_loss= 217.0563201904297
tensor(0.5702, device='cuda:0')
tensor(0.5702, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 41941.296875
content_loss = 76286.796875
stt_loss = 9221.9443359375
tv_loss= 217.27098083496094
tensor(0.4078, device='cuda:0')
tensor(0.4078, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 41814.375
content_loss = 75865.140625
stt_loss = 9289.2490234375
tv_loss= 217.30508422851562
tensor(0.6262, device='cuda:0')
tensor(0.6262, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 41502.8828125
content_loss = 75520.9296875
stt_loss = 9505.732421875
tv_loss= 217.7484130859375
tensor(1.0082, device='cuda:0')
tensor(1.0082, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 41415.3671875
content_loss = 75184.8984375
stt_loss = 9507.857421875
tv_loss= 217.67556762695312
tensor(0.5196, device='cuda:0')
tensor(0.5196, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 41217.48046875
content_loss = 74806.0703125
stt_loss = 9676.7587890625
tv_loss= 218.0126495361328
tensor(0.3398, device='cuda:0')
tensor(0.3398, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 41184.2265625
content_loss = 74511.4765625
stt_loss = 9635.2587890625
tv_loss= 217.8346710205078
tensor(0.6310, device='cuda:0')
tensor(0.6310, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 41012.24609375
content_loss = 74071.9453125
stt_loss = 9903.5830078125
tv_loss= 218.43789672851562
tensor(0.4253, device='cuda:0')
tensor(0.4253, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 40998.66796875
content_loss = 73821.4140625
stt_loss = 9824.419921875
tv_loss= 218.2054901123047
tensor(0.3530, device='cuda:0')
tensor(0.3530, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 40810.97265625
content_loss = 73491.9140625
stt_loss = 10034.669921875
tv_loss= 218.63272094726562
tensor(0.4867, device='cuda:0')
tensor(0.4867, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 40783.18359375
content_loss = 73274.6953125
stt_loss = 9977.75390625
tv_loss= 218.46804809570312
tensor(0.6644, device='cuda:0')
tensor(0.6644, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 40593.41796875
content_loss = 73054.3046875
stt_loss = 10098.1875
tv_loss= 218.7206573486328
tensor(0.5279, device='cuda:0')
tensor(0.5279, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 40519.1875
content_loss = 72833.859375
stt_loss = 10128.6513671875
tv_loss= 218.7823944091797
tensor(0.3108, device='cuda:0')
tensor(0.3108, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 40379.2890625
content_loss = 72610.5703125
stt_loss = 10242.85546875
tv_loss= 219.05029296875
tensor(0.5282, device='cuda:0')
tensor(0.5282, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 40272.8671875
content_loss = 72484.2265625
stt_loss = 10226.634765625
tv_loss= 219.0049591064453
tensor(0.3895, device='cuda:0')
tensor(0.3895, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 40155.92578125
content_loss = 72278.2578125
stt_loss = 10313.0810546875
tv_loss= 219.22216796875
tensor(0.2829, device='cuda:0')
tensor(0.2829, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 40106.69140625
content_loss = 72048.8203125
stt_loss = 10361.3837890625
tv_loss= 219.3397674560547
tensor(0.2836, device='cuda:0')
tensor(0.2836, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 40085.67578125
content_loss = 71818.71875
stt_loss = 10394.5146484375
tv_loss= 219.42393493652344
tensor(0.2393, device='cuda:0')
tensor(0.2393, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 39949.35546875
content_loss = 71620.53125
stt_loss = 10518.5693359375
tv_loss= 219.76528930664062
tensor(0.3107, device='cuda:0')
tensor(0.3107, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 40005.4609375
content_loss = 71421.21875
stt_loss = 10459.06640625
tv_loss= 219.6381072998047
tensor(0.4009, device='cuda:0')
tensor(0.4009, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 39831.44921875
content_loss = 71288.328125
stt_loss = 10565.6474609375
tv_loss= 219.94570922851562
tensor(0.3482, device='cuda:0')
tensor(0.3482, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 39827.46875
content_loss = 71142.7265625
stt_loss = 10532.384765625
tv_loss= 219.9019012451172
tensor(0.3637, device='cuda:0')
tensor(0.3637, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 39702.2578125
content_loss = 71014.2265625
stt_loss = 10606.7294921875
tv_loss= 220.1615447998047
tensor(0.2689, device='cuda:0')
tensor(0.2689, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 39657.5390625
content_loss = 70851.359375
stt_loss = 10636.078125
tv_loss= 220.30088806152344
tensor(0.2093, device='cuda:0')
tensor(0.2093, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 39639.0625
content_loss = 70705.234375
stt_loss = 10631.869140625
tv_loss= 220.3527374267578
tensor(0.2969, device='cuda:0')
tensor(0.2969, device='cuda:0')
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)
style_loss = 39588.14453125
content_loss = 70515.921875
stt_loss = 10706.9970703125
tv_loss= 220.6179656982422
tensor(0.2234, device='cuda:0')
tensor(0.2234, device='cuda:0')
========iter:  3 ============
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████| 50/50 [00:01<00:00, 36.06it/s]
 94%|████████████████████████████████████████████████████████████████████████████████████████████████▊      | 47/50 [00:01<00:00, 34.17it/s]
cpu cpu
check-input tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64) tensor([], size=(0, 4), dtype=torch.int64) tensor([], size=(0, 3), dtype=torch.int64) tensor([], size=(0, 3), dtype=torch.int64)
check-input2 tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64) tensor([], device='cuda:0', size=(0, 4), dtype=torch.int64) tensor([], size=(0, 4), dtype=torch.int64) tensor([], size=(0, 3), dtype=torch.int64) tensor([], size=(0, 3), dtype=torch.int64)
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
nan: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
DUH: [tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64), tensor([], device='cuda:0', size=(0, 2), dtype=torch.int64)]
Ipython from line 178 of video_style.py
Python 3.9.2 (default, Feb 28 2021, 17:03:44)
Type 'copyright', 'credits' or 'license' for more information

100%|███████████████████████████████████████████████████████████████████████████████████████████████████████| 50/50 [00:14<00:00, 37.15it/s]
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
Cell In[1], line 1
----> 1 prpirnt(l)

100%|███████████████████████████████████████████████████████████████████████████████████████████████████████| 50/50 [00:28<00:00,  1.77it/s]
tensor(nan)
tensor(151.0610)
tensor(3.3946e+38)
tensor(158.3294)
Ipython from line 187 of video_style.py
Python 3.9.2 (default, Feb 28 2021, 17:03:44)
Type 'copyright', 'credits' or 'license' for more information
IPython 8.17.2 -- An enhanced Interactive Python. Type '?' for help.